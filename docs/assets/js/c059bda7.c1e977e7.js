"use strict";(self.webpackChunklxm_web=self.webpackChunklxm_web||[]).push([[2201],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return a?r.createElement(f,o(o({ref:t},c),{},{components:a})):r.createElement(f,o({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8375:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const i={sidebar_position:4},o="Data pre-processing",s={unversionedId:"guides/data-preprocessing",id:"guides/data-preprocessing",title:"Data pre-processing",description:"Once the appropriate metadata have been added regarding Data Providers, Event Types, Data Sources, Import Formats and Linkage Projects, LinXmart is ready to accept data for linkage.",source:"@site/docs/guides/data-preprocessing.md",sourceDirName:"guides",slug:"/guides/data-preprocessing",permalink:"/docs/guides/data-preprocessing",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Merge vs best-link grouping",permalink:"/docs/guides/grouping-config"},next:{title:"Ingesting data",permalink:"/docs/category/ingesting-data"}},l={},p=[{value:"Automated pre-processing",id:"automated-pre-processing",level:2},{value:"Pre-processing using the Simple Envelope Builder",id:"pre-processing-using-the-simple-envelope-builder",level:2},{value:"Project Definition Files",id:"project-definition-files",level:2}],c={toc:p};function d(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"data-pre-processing"},"Data pre-processing"),(0,n.kt)("p",null,"Once the appropriate metadata have been added regarding ",(0,n.kt)("a",{parentName:"p",href:"/docs/concepts/data-providers"},"Data Providers"),", ",(0,n.kt)("a",{parentName:"p",href:"/docs/concepts/event-types"},"Event Types"),", ",(0,n.kt)("a",{parentName:"p",href:"/docs/concepts/data-sources"},"Data Sources"),", ",(0,n.kt)("a",{parentName:"p",href:"/docs/concepts/import-formats"},"Import Formats")," and ",(0,n.kt)("a",{parentName:"p",href:"/docs/concepts/linkage-projects"},"Linkage Projects"),", LinXmart is ready to accept data for linkage."),(0,n.kt)("p",null,"An important step prior to linkage is to pre-process all datasets. Pre-processing can take a number of forms. Standardising individual fields into a common format across datasets is key to ensuring these fields can be accurately compared during linkage. This could include for example making sure that gender is coded the same across all datasets. Data cleaning techniques aim to transform particular fields into a format that will improve linkage accuracy, for example by removing punctuation marks or phonetically encoding fields. "),(0,n.kt)("p",null,"LinXmart includes a number of pre-processing techniques. Some of these occur automatically upon data ingest, while others can be manually specified using the Simple Envelope Builder tool. "),(0,n.kt)("h2",{id:"automated-pre-processing"},"Automated pre-processing"),(0,n.kt)("p",null,"When data is loaded into LinXmart, the following pre-processing occurs."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Dates of birth are automatically standardised using the date of birth format found in the specified Import Format"),(0,n.kt)("li",{parentName:"ul"},"Sex values of 1, 2, M, F, Male, Female are automatically standardised into the same format"),(0,n.kt)("li",{parentName:"ul"},"For the State field, full names of Australian states (e.g. New South Wales), abbreviations (e.g. NSW) and standard Australian codes  (1, etc) are all standardised into the same format. "),(0,n.kt)("li",{parentName:"ul"},"Blank values at the start and end of all fields are removed"),(0,n.kt)("li",{parentName:"ul"},"The Soundex and NYSIIS phonetic encodings of Surname are computed and stored."),(0,n.kt)("li",{parentName:"ul"},"The first initial of given name is stored as a separate field. ")),(0,n.kt)("h2",{id:"pre-processing-using-the-simple-envelope-builder"},"Pre-processing using the Simple Envelope Builder"),(0,n.kt)("p",null,"The Simple Envelope Builder is a stand-alone desktop application used to modify datasets and create envelopes that are accepted by LinXmart for processing. It takes as input the raw data file along with a ",(0,n.kt)("a",{parentName:"p",href:"#project-definition-files"},"Project Definition File"),", and creates an envelope ready to be ingested into LinXmart. "),(0,n.kt)("p",null,"The Simple Envelope Builder provides a range of additional pre-processing options. These allow the user to:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"trim the length of fields"),(0,n.kt)("li",{parentName:"ul"},"remove leading and trailing whitespace"),(0,n.kt)("li",{parentName:"ul"},"change the case of fields"),(0,n.kt)("li",{parentName:"ul"},"filter out specific character sets such as spaces, numbers or special characters"),(0,n.kt)("li",{parentName:"ul"},"convert alternate coding\u2019s for sex into a standardised format"),(0,n.kt)("li",{parentName:"ul"},"match a regular expression pattern"),(0,n.kt)("li",{parentName:"ul"},"convert to missing fields which contain specific values provided by the user"),(0,n.kt)("li",{parentName:"ul"},"replace one character with another"),(0,n.kt)("li",{parentName:"ul"},"replace one word with another"),(0,n.kt)("li",{parentName:"ul"},"phonetically encode a field, using either the Soundex or NYSIIS algorithms"),(0,n.kt)("li",{parentName:"ul"},"select a substring from a field")),(0,n.kt)("p",null,"The Simple Envelope Builder is also used to encode datasets for privacy preserving linkage. "),(0,n.kt)("p",null,"Operators should note that while data cleaning is optional, ensuring data fields are in a common format (standardisation) is highly recommended. "),(0,n.kt)("p",null,"The use of the Simple Envelope Builder for data pre-processing is also optional. Some operators may find their datasets do not require any pre-processing. Others may choose to use carry out their pre-processing use third-party tools, such as statistical programming languages they already use. LinXmart workflows allow pre-processing to occur in third-party tools, as the data has not yet been ingested into the system when pre-processing occurs."),(0,n.kt)("h2",{id:"project-definition-files"},"Project Definition Files"),(0,n.kt)("p",null,"The ",(0,n.kt)("em",{parentName:"p"},"Project Definition File")," contains information on the fields in the dataset and the metadata relating to the linkage. It is used as input into the Simple Envelope Builder. It is supplied by LinXmart, and can be downloaded via the user interface. Further information on the Project Definition File can be found in the Simple Envelope Builder Manual. "),(0,n.kt)("p",null,"Project Definition Files can be downloaded from the Project Details screen (select the Linkage Project of interest from the ",(0,n.kt)("inlineCode",{parentName:"p"},"Projects")," tab to access this screen). Select ",(0,n.kt)("inlineCode",{parentName:"p"},"Event Types")," from the menu in the top right-hand corner. This will bring up the Event Type Data Sources page. Showing all Event Types attached to this Linkage Project. A download button is found next to compatible data sources of each Event Type member of the project in the options column.   "),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Event Type Data Source",src:a(6669).Z,width:"876",height:"451"})))}d.isMDXComponent=!0},6669:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/project-datasources-bd757a0d4348e4231f41a9294d025a97.png"}}]);