"use strict";(self.webpackChunklxm_web=self.webpackChunklxm_web||[]).push([[3160],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>f});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(a),f=r,u=c["".concat(d,".").concat(f)]||c[f]||p[f]||i;return a?n.createElement(u,o(o({ref:t},m),{},{components:a})):n.createElement(u,o({ref:t},m))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=c;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},4494:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const i={sidebar_position:4},o="Import Formats",l={unversionedId:"concepts/import-formats",id:"concepts/import-formats",title:"Import Formats",description:"The Import Format provides a description of the layout of the data files to be received for a Data Source. Each Data Source has one import format associated with it, and it is assumed that all files/data received for a single Data Source be in the same format. A Data Source's import format can be modified if the format changes over time.",source:"@site/docs/concepts/import-formats.md",sourceDirName:"concepts",slug:"/concepts/import-formats",permalink:"/docs/concepts/import-formats",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Data Sources",permalink:"/docs/concepts/data-sources"},next:{title:"Linkage Projects",permalink:"/docs/concepts/linkage-projects"}},d={},s=[{value:"Import Format Types",id:"import-format-types",level:2},{value:"Creating an Import Format through the Web Interface",id:"creating-an-import-format-through-the-web-interface",level:2},{value:"Adding Columns to an Import Format",id:"adding-columns-to-an-import-format",level:2},{value:"Field Types",id:"field-types",level:3},{value:"Example dates",id:"example-dates",level:3},{value:"Editing an Import Format",id:"editing-an-import-format",level:2}],m={toc:s};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"import-formats"},"Import Formats"),(0,r.kt)("p",null,"The Import Format provides a description of the layout of the data files to be received for a ",(0,r.kt)("a",{parentName:"p",href:"/docs/concepts/data-sources"},"Data Source"),". Each Data Source has one import format associated with it, and it is assumed that all files/data received for a single Data Source be in the same format. A Data Source's import format can be modified if the format changes over time. "),(0,r.kt)("p",null,"The same Import Format can be used for different event types from the same or different Data Providers, provided the file layout is identical. Typically, new Import Formats are required for each new Event Type.  "),(0,r.kt)("p",null,"Import formats can be edited, but never deleted from the system."),(0,r.kt)("h2",{id:"import-format-types"},"Import Format Types"),(0,r.kt)("p",null,"Import formats are created through the Web Interface. LinXmart currently accepts text files only, containing data in either delimited or fixed-width format. LinXmart expects all datasets to contain one record per row, and with each row to have a field that is a unique identifier."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Delimited Format")),(0,r.kt)("p",null,"A delimited file is one in which the fields in each record (such as name, address, date of birth, id, etc.) are separated by a single character, such as a comma or a tab. An example row is shown in Figure 6. "),(0,r.kt)("p",null,"Figure 6: A row of a comma delimited data file"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Fixed Width Format")),(0,r.kt)("p",null,"A fixed width file is one in which each field is determined by a start and end position in the record. In these files, a field is given a set number of characters (e.g. 20), and for values that are less than 20 characters in length, the remainder are filled with spaces. LinXmart removes these spaces before processing the field. Figure 7 shows an example."),(0,r.kt)("p",null,"Figure 7: Two rows from a fixed width file"),(0,r.kt)("h2",{id:"creating-an-import-format-through-the-web-interface"},"Creating an Import Format through the Web Interface"),(0,r.kt)("p",null,"Import formats can only be created during the creation of an event type (addressed in Subsection 2.2.1) by clicking ",(0,r.kt)("inlineCode",{parentName:"p"},"Add")," next to the Import Format field. "),(0,r.kt)("p",null,"The following fields must be completed when creating a new Import Format through the Web Interface (Figure 8)."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Name"),(0,r.kt)("td",{parentName:"tr",align:null},"Each Import Format must be given a unique name, and will thereafter appear in the drop-down list of previously created import formats.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Is First Line Header"),(0,r.kt)("td",{parentName:"tr",align:null},"A header is a line found at the top of a data file which contains a field name for each of the columns in the file. If this is marked as ",(0,r.kt)("inlineCode",{parentName:"td"},"No")," then the first line of the file will be treated as data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Row Format"),(0,r.kt)("td",{parentName:"tr",align:null},"Either ",(0,r.kt)("inlineCode",{parentName:"td"},"delimited")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"fixed width"),", as explained above.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Column Separator"),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"delimited")," is selected for row format, then the character(s) which separates each field must be given. Common characters are comma (,) and tab (\\t).")))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The use of delimiting characters inside fields (e.g. a comma inside an address field) are supported if the field is surrounded in double quotes.")),(0,r.kt)("p",null,"Click on ",(0,r.kt)("inlineCode",{parentName:"p"},"Save")," and you will be prompted to add columns to this Import Format."),(0,r.kt)("p",null,"Figure 8: Add import format screen"),(0,r.kt)("h2",{id:"adding-columns-to-an-import-format"},"Adding Columns to an Import Format"),(0,r.kt)("p",null,"A description of each column in the input data that is to be stored in LinXmart is required. A column can be added by selecting the \u2018Add New Column for this Import Format\u2019 button."),(0,r.kt)("p",null,"The following fields will need to be completed:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Linkage Field"),(0,r.kt)("td",{parentName:"tr",align:null},"This informs LinXmart which of its linkage fields will correspond to this column. The drop-down list contains all of the linkage fields that are available. These are listed in Appendix A.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Name"),(0,r.kt)("td",{parentName:"tr",align:null},"This field\u2019s value will default to the Linkage Field name. The operator may override this by using a more representative name.  This is particularly recommended for text fields, and binary fields, and will assist in meaningfully identifying these fields later. An operator-provided name is mandatory for non-linkage fields.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Format"),(0,r.kt)("td",{parentName:"tr",align:null},"This field only appears for some linkage fields. For example, dates can be provided and parsed by the system in a myriad of formats. Below are some example date formats that can be entered. A full list of formats for day, month and year components are provided in Appendix B. Note that month formats are specified in uppercase.")))),(0,r.kt)("p",null,"Additional fields for delimited files:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Index"),(0,r.kt)("td",{parentName:"tr",align:null},"The column number of the field in question. The first field in the file has an index of 1, the second field 2, etc.")))),(0,r.kt)("p",null,"Additional fields for fixed width files:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Start Position"),(0,r.kt)("td",{parentName:"tr",align:null},"The column start position of the field in question.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"End Position"),(0,r.kt)("td",{parentName:"tr",align:null},"The column end position of the field in question \u2013 the position of the last character.")))),(0,r.kt)("p",null,"Most linkage fields have a defined maximum length. LinXmart will notify during processing if the maximum is exceeded and a record was not able to be parsed (see Section 4.3.1). When all fields (columns) have been added, click the ",(0,r.kt)("inlineCode",{parentName:"p"},"Save")," button above the list to save the Import Format."),(0,r.kt)("p",null,"Not all fields in the supplied data file need to be added to the Import Format. Any that are not included as either linkage or non-linkage fields will be ignored.  "),(0,r.kt)("p",null,"Figure 9: Example of an import format"),(0,r.kt)("h3",{id:"field-types"},"Field Types"),(0,r.kt)("p",null,"An important LinXmart field is the ",(0,r.kt)("inlineCode",{parentName:"p"},"Source Unique ID"),". It is a field in the dataset that contains a unique value for each record in the file. All Import Formats require a Source Unique ID field. It is used by LinXmart to uniquely identify records, and is returned when data is extracted from the system."),(0,r.kt)("p",null,"If date of birth is supplied as a single field, this can be added as ",(0,r.kt)("inlineCode",{parentName:"p"},"Date of Birth"),". If it is supplied as components (day, month and year of birth) these can be added separately. However, only full date of birth or the separate components can be added \u2013 not both. "),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Jurisdictional Linkage Key")," refers to any field in the dataset that is a unique person identifier (that is, has the same value across different records within the collection belonging to the same person). "),(0,r.kt)("p",null,"In addition to the named personally identifying fields, there are three additional fields (Text Fields 1-10) that can be used to store any other identifiers for use in linkage."),(0,r.kt)("p",null,"Non-linkage fields can also be stored in LinXmart. These are not used by LinXmart, but are there for the operator\u2019s reference. To add these, select the value ",(0,r.kt)("inlineCode",{parentName:"p"},"(none)")," for the Linkage Field. "),(0,r.kt)("p",null,"Finally, there also exists a number of Binary Fields. These are used for storing encoded fields in privacy preserving linkage. For more information on privacy preserving linkage, see Section 9."),(0,r.kt)("p",null,"For further information about how each field is validated, see Subsection 4.3.1"),(0,r.kt)("h3",{id:"example-dates"},"Example dates"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Example date"),(0,r.kt)("th",{parentName:"tr",align:null},"Format code"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"11/08/1986"),(0,r.kt)("td",{parentName:"tr",align:null},"dd/MM/yyyy")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"19860811"),(0,r.kt)("td",{parentName:"tr",align:null},"yyyyMMdd")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1181986 or 11101986"),(0,r.kt)("td",{parentName:"tr",align:null},"ddMyyyy")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"11-AUG-1986"),(0,r.kt)("td",{parentName:"tr",align:null},"dd-MMM-yyyy")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"11-08-86"),(0,r.kt)("td",{parentName:"tr",align:null},"dd-MM-yy")))),(0,r.kt)("h2",{id:"editing-an-import-format"},"Editing an Import Format"),(0,r.kt)("p",null,"To edit an import format, you must first select to Edit an existing event type that uses the Import Format \u2013 see Subsection 2.2.2. From here, the Import Format can be edited by clicking ",(0,r.kt)("inlineCode",{parentName:"p"},"Edit")," next to the Import Format listed. The ",(0,r.kt)("inlineCode",{parentName:"p"},"Row Format")," is the only Import Format metadata field that cannot be changed. Any Import Format Columns (i.e. fields) entries can be changed or deleted, and new fields can be added."))}p.isMDXComponent=!0}}]);