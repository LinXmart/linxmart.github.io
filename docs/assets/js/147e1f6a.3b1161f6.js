"use strict";(self.webpackChunklxm_web=self.webpackChunklxm_web||[]).push([[1938],{99722:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var o=r(74848),n=r(28453);const i={sidebar_position:8},c="Project to project linkage",s={id:"guides/project-to-project",title:"Project to project linkage",description:"In a typical Linkage Project, records will only link to other records within that Linkage Project, with Linkage Projects completely independent from each other.",source:"@site/versioned_docs/version-1.11.7/guides/project-to-project.md",sourceDirName:"guides",slug:"/guides/project-to-project",permalink:"/docs/guides/project-to-project",draft:!1,unlisted:!1,tags:[],version:"1.11.7",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Destroying record-level data",permalink:"/docs/guides/destroying-record-data"},next:{title:"Reporting",permalink:"/docs/guides/reporting"}},a={},d=[{value:"Configuring project-to-project linkage",id:"configuring-project-to-project-linkage",level:2},{value:"Matching and grouping",id:"matching-and-grouping",level:2},{value:"Merge grouping",id:"merge-grouping",level:3},{value:"Weighted best-link grouping",id:"weighted-best-link-grouping",level:3},{value:"Updates to the reference project",id:"updates-to-the-reference-project",level:2}];function h(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"project-to-project-linkage",children:"Project to project linkage"})}),"\n",(0,o.jsxs)(t.p,{children:["In a typical ",(0,o.jsx)(t.a,{href:"/docs/concepts/linkage-projects",children:"Linkage Project"}),", records will only link to other records within that Linkage Project, with Linkage Projects completely independent from each other."]}),"\n",(0,o.jsxs)(t.p,{children:["LinXmart also supports linkage between ",(0,o.jsx)(t.a,{href:"/docs/concepts/linkage-projects",children:"Linkage Project"}),", referred to as Project-to-Project linkages."]}),"\n",(0,o.jsx)(t.p,{children:"A common use of this type of linkage is when:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["one ",(0,o.jsx)(t.a,{href:"/docs/concepts/linkage-projects",children:"Linkage Project"})," contains an ongoing repository of data that is regularly updated, and"]}),"\n",(0,o.jsx)(t.li,{children:"there is a need to link a new dataset to some or all of this data, but"}),"\n",(0,o.jsx)(t.li,{children:"this new dataset is not to become part of this ongoing repository."}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["An example is shown in below. Here the ",(0,o.jsx)(t.a,{href:"/docs/concepts/linkage-projects",children:"Linkage Project"})," ",(0,o.jsx)(t.em,{children:"NSW Master Map"})," is a repository of health-based information from NSW that is regularly updated. A researcher who holds a separate registry cohort dataset (the NSW ",(0,o.jsx)(t.em,{children:"Bowel Surgery Registry"}),") wishes to link their data to mortality information to investigate mortality rates in this cohort. However, this registry is not to become part of the ",(0,o.jsx)(t.em,{children:"NSW Master Map"}),"; it is solely being used in one research project. By utilising project-to-project linkage, this registry data can be linked against the ",(0,o.jsx)(t.em,{children:"NSW Master Map"})," without joining or modifying it."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Project-to-Project Linkage",src:r(49730).A+"",width:"460",height:"561"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:"Example of project-to-project linkage; a registry cohort is linked against data in an ongoing repository without joining the repository"})}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsxs)(t.p,{children:['In this section we refer to the ongoing repository as the "reference project", and the registry the "calling project".',(0,o.jsx)(t.br,{}),"\n","Note that LinXmart does not support the chaining of Linkage Projects. That is, if Project ",(0,o.jsx)(t.code,{children:"A"})," is linked to Project ",(0,o.jsx)(t.code,{children:"B"}),", then Project ",(0,o.jsx)(t.code,{children:"B"})," cannot be linked to Project ",(0,o.jsx)(t.code,{children:"C"}),". Chaining or cascading Linkage Projects in this way will produce unexpected results."]})}),"\n",(0,o.jsx)(t.h2,{id:"configuring-project-to-project-linkage",children:"Configuring project-to-project linkage"}),"\n",(0,o.jsx)(t.p,{children:"The configuration of a project-to-project linkage is established when the calling project is created and a project-to-project linkage is declared. The operator declares the reference project that is to be linked to, and then declares which event types from the reference project are to be included in the linkage."}),"\n",(0,o.jsxs)(t.p,{children:["To configure project-to-project linkage, select the calling project from the ",(0,o.jsx)(t.code,{children:"PROJECTS"})," tab to bring up the Project Details screen. From here, select the ",(0,o.jsx)(t.code,{children:"Project Links"})," button from the menu in the top right-hand corner. Linking to one or more ",(0,o.jsx)(t.a,{href:"/docs/concepts/event-types",children:"Event Types"})," in another ",(0,o.jsx)(t.a,{href:"/docs/concepts/linkage-projects",children:"Linkage Project"})," is achieved by clicking ",(0,o.jsx)(t.code,{children:"Add Project Link"})," in the Project-to-Project Linkages panel."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Project-to-Project Linkages",src:r(42595).A+"",width:"1402",height:"698"})}),"\n",(0,o.jsxs)(t.p,{children:["The Add Project Links page will be displayed. From the ",(0,o.jsx)(t.code,{children:"Link To"})," drop-down box, select the reference Linkage Project. The Event Types that are attached to this project will be listed. Select all those that you wish this project to link and click ",(0,o.jsx)(t.code,{children:"Save"})," to complete."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Add Project-to-Project Linkage",src:r(11754).A+"",width:"1402",height:"506"})}),"\n",(0,o.jsx)(t.h2,{id:"matching-and-grouping",children:"Matching and grouping"}),"\n",(0,o.jsxs)(t.p,{children:["During the Matching phase of a project-to-project linkage, LinXmart looks at the project link configuration of the calling project and identifies the Event Type(s) in the reference project that are to be linked. All the reference project records that are of the specified Event Type(s) are included in the matching. For example, if calling project ",(0,o.jsx)(t.code,{children:"A"})," links to Event Types ",(0,o.jsx)(t.code,{children:"X"})," and ",(0,o.jsx)(t.code,{children:"Y"})," in reference project ",(0,o.jsx)(t.code,{children:"B"}),", then Project ",(0,o.jsx)(t.code,{children:"B"}),"\u2019s event type ",(0,o.jsx)(t.code,{children:"X"})," and ",(0,o.jsx)(t.code,{children:"Y"})," records are included in the Matching phase of Project ",(0,o.jsx)(t.code,{children:"A"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["The Matching phase will produce a number of match pairs that link records in the calling project (",(0,o.jsx)(t.code,{children:"A"}),") to records in the reference project (",(0,o.jsx)(t.code,{children:"B"}),"). The Grouping phase for Project ",(0,o.jsx)(t.code,{children:"A"})," uses these pairs, along with the groups in Project ",(0,o.jsx)(t.code,{children:"B"}),", to group events for Project ",(0,o.jsx)(t.code,{children:"A"}),". This means that two events in a calling project can be grouped through indirect association to a group in the reference project."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Project-to-Project Grouping",src:r(24820).A+"",width:"721",height:"379"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:"Records can be brought together indirectly through Project-to-Project linkage"})}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsx)(t.p,{children:"In project-to-project linkage, it is important to note that no records, pairs or groups in the reference project are in any way altered or affected by the linkage with the calling project. Any links that are made by the calling project to records in the reference project, and any resulting groups or pairs are all stored in the calling project."})}),"\n",(0,o.jsx)(t.h3,{id:"merge-grouping",children:"Merge grouping"}),"\n",(0,o.jsx)(t.p,{children:"The merge grouping process will process every matching pair of records with a weight above the defined threshold and form groups of all the records that are linked via the pairs."}),"\n",(0,o.jsxs)(t.p,{children:["In project-to-project linkage, records in different groups in a reference project may come together into a single group in the calling project. For example, the figure below shows the results of a grouping where records 2, 3 and 4 in calling project ",(0,o.jsx)(t.code,{children:"A"})," link to each other and to records in different groups in reference project ",(0,o.jsx)(t.code,{children:"B"}),". Merge grouping will bring all of the records (2, 3, 4) from project ",(0,o.jsx)(t.code,{children:"A"})," and (10, 13 and 14) from Project ",(0,o.jsx)(t.code,{children:"B"})," into a single group in Project ",(0,o.jsx)(t.code,{children:"A"}),", even though record 10 is in a different group to records 13 and 14 in Project ",(0,o.jsx)(t.code,{children:"B"}),"."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Project-to-Project Merge Grouping",src:r(49993).A+"",width:"333",height:"300"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:"Merge grouping in Project-to-Project linkage can bring together records from the reference project that exist there in separate groups"})}),"\n",(0,o.jsx)(t.h3,{id:"weighted-best-link-grouping",children:"Weighted best-link grouping"}),"\n",(0,o.jsx)(t.p,{children:"Weighted best-link first orders all match pairs by their weight in descending order, so that those with the highest score are processed first. When a calling project uses this method to link to a reference project, it honours the groups in the reference project, meaning these groups cannot be merged together."}),"\n",(0,o.jsxs)(t.p,{children:["The figure below shows the same records and pairs as in the above ",(0,o.jsx)(t.a,{href:"#merge-grouping",children:"Merge grouping"})," example. Note that the resulting groups are different. As each matching pair is processed, the weighted best-link grouping strategy decides that if that pair would break any rules it is ignored, as illustrated by the dotted lines. These rules prevent existing groups in either Project ",(0,o.jsx)(t.code,{children:"A"})," or Project ",(0,o.jsx)(t.code,{children:"B"})," from coming together and prevent redundant pairs from being processed. In this example, two groups are formed: records 2 and 10 in one group, and records 3, 4, 13 and 14 in another."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Project-to-Project Best-Link Grouping",src:r(57139).A+"",width:"488",height:"488"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:"The same pairs result in different groupings when using Weighted Best-Link Grouping for Project-to-Project linkage"})}),"\n",(0,o.jsx)(t.h2,{id:"updates-to-the-reference-project",children:"Updates to the reference project"}),"\n",(0,o.jsx)(t.p,{children:"The previous section discussed the matching and grouping which occur when records are added to the calling project. However, LinXmart also makes changes to the calling project when records are added, amended or deleted from the reference project."}),"\n",(0,o.jsx)(t.p,{children:"When records are added, deleted or amended in a reference project, LinXmart will initiate secondary jobs to update the linkage maps of any calling project(s) that are affected. This keeps reference projects and any dependencies (calling projects) synchronised. The secondary jobs spawned by LinXmart are visible in the Jobs screen of the Web Interface and appear as extra jobs in the incoming Envelope Request."})]})}function l(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},11754:(e,t,r)=>{r.d(t,{A:()=>o});const o=r.p+"assets/images/project-to-project-add-cff58cf06aaa266e0bcf881c45c0efc5.png"},57139:(e,t,r)=>{r.d(t,{A:()=>o});const o=r.p+"assets/images/project-to-project-bestlink-grouping-19a9d305d6a24d3f9bb445e85bc1ee6a.png"},24820:(e,t,r)=>{r.d(t,{A:()=>o});const o=r.p+"assets/images/project-to-project-grouping-96a3e2aca56fc61da642cb07997e85d5.png"},49730:(e,t,r)=>{r.d(t,{A:()=>o});const o=r.p+"assets/images/project-to-project-linkage-453fb7a56e673699762954e69d3e807a.png"},42595:(e,t,r)=>{r.d(t,{A:()=>o});const o=r.p+"assets/images/project-to-project-list-0b3a92e9421f72e765cdcdaf3fc8c62f.png"},49993:(e,t,r)=>{r.d(t,{A:()=>o});const o=r.p+"assets/images/project-to-project-merge-grouping-f49c914d7aad23cfc5486e3579715161.png"},28453:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>s});var o=r(96540);const n={},i=o.createContext(n);function c(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);