"use strict";(self.webpackChunklxm_web=self.webpackChunklxm_web||[]).push([[6635],{62801:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=a(74848),i=a(28453);const o={sidebar_position:3},s="Client commands",c={id:"advanced/data-clients/client-commands",title:"Client commands",description:"Remote data clients will communicate with LinXmart by connecting through the client API and asking LinXmart if there are any commands for it to perform. This polling will occur regularly and is configurable via the LinXmart system configuration.",source:"@site/versioned_docs/version-2.0.5/advanced/data-clients/client-commands.md",sourceDirName:"advanced/data-clients",slug:"/advanced/data-clients/client-commands",permalink:"/docs/advanced/data-clients/client-commands",draft:!1,unlisted:!1,tags:[],version:"2.0.5",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Data Client configuration",permalink:"/docs/advanced/data-clients/data-client-config"},next:{title:"Envelope file format",permalink:"/docs/advanced/envelope-format"}},d={},l=[{value:"Upload data command",id:"upload-data-command",level:2},{value:"Download extraction results command",id:"download-extraction-results-command",level:2}];function r(e){const t={a:"a",admonition:"admonition",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"client-commands",children:"Client commands"})}),"\n",(0,n.jsx)(t.p,{children:"Remote data clients will communicate with LinXmart by connecting through the client API and asking LinXmart if there are any commands for it to perform. This polling will occur regularly and is configurable via the LinXmart system configuration."}),"\n",(0,n.jsx)(t.p,{children:"Two common commands that might be invoked as part of the standard linkage process are:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"#upload-data-command",children:"Uploading of data"})," from a specific dataset"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"#download-extraction-results-command",children:"Downloading extraction results"})," for a specific dataset"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Other commands might be issued for more administrative purposes."}),"\n",(0,n.jsxs)(t.p,{children:["All client commands can be monitored via the ",(0,n.jsx)(t.a,{href:"/docs/guides/monitoring-activity#client-commands",children:"Client Comms Activity"})," page."]}),"\n",(0,n.jsx)(t.h2,{id:"upload-data-command",children:"Upload data command"}),"\n",(0,n.jsxs)(t.p,{children:["When data is ",(0,n.jsx)(t.a,{href:"../../guides/loading-data/loading-from-project/",children:"loaded into a Linkage Project"})," from a Data Client Data Source, an ",(0,n.jsx)(t.em,{children:"upload data command"})," is created for the specific data client. The next time that client polls the server for commands, it is given this upload directive. The client will then, in the background, prepare and upload the required data to LinXmart via the client API."]}),"\n",(0,n.jsxs)(t.p,{children:["At the same time the ",(0,n.jsx)(t.em,{children:"upload data command"})," is created, the system will continue on with the standard load and linkage process. When the ",(0,n.jsx)(t.em,{children:"Load Linkage Request"})," job starts, it will look to see if the data is available to process. If the client has yet to upload the data, the job will wait indefinitely until the data does become available. If the ",(0,n.jsx)(t.em,{children:"Load Linkage Request"}),' appears to be stuck on "Waiting for Datasource", check the ',(0,n.jsx)(t.a,{href:"/docs/advanced/data-clients/data-client-config#viewing-data-client-details",children:"status of the Data Client"})," to ensure it is connected. You can also verify that the client command has been issued and processed via the ",(0,n.jsx)(t.a,{href:"/docs/guides/monitoring-activity#client-commands",children:"Client Comms activity page"}),"."]}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsx)(t.p,{children:"If a command has been issued to a Data Client, it is possible to cancel the command if it is in the queued stated, or request a cancellation if it has already started. Cancelling a client command will also cancel any job that is associated with it."})}),"\n",(0,n.jsx)(t.h2,{id:"download-extraction-results-command",children:"Download extraction results command"}),"\n",(0,n.jsxs)(t.p,{children:["An ",(0,n.jsx)(t.em,{children:"update linkage map command"})," is created for a data client if extraction results are requested for an ",(0,n.jsx)(t.a,{href:"/docs/concepts/event-types",children:"Event Type"})," and the following criteria are met:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"the Event Type has a Data Source connected to one of the Data Client's Datasets"}),"\n",(0,n.jsx)(t.li,{children:"the Event Type is attached to the Linkage Project"}),"\n",(0,n.jsx)(t.li,{children:"the Dataset has the capability to receive extraction results"}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Upon receipt of this command, the data client will download the extraction results via the client API and store these in a location configured by the remote data client itself."})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(r,{...e})}):r(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>c});var n=a(96540);const i={},o=n.createContext(i);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);